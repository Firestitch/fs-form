import { AfterViewChecked, ElementRef, ViewContainerRef, Renderer2 } from '@angular/core';
import { NgControl } from '@angular/forms';
import { FsFormCommon } from './../services/fsformcommon.service';
import { OnDestroy } from '@angular/core/src/metadata/lifecycle_hooks';
export declare class FsControlDirective implements AfterViewChecked, OnDestroy {
    fsFormRequiredMessage: string;
    fsFormEmailMessage: string;
    fsFormPhoneMessage: string;
    fsFormNumericMessage: string;
    fsFormIntegerMessage: string;
    fsFormMinMessage: string;
    fsFormMaxMessage: string;
    fsFormMinlengthMessage: string;
    fsFormMaxlengthMessage: string;
    fsFormCompareMessage: string;
    fsFormPatternMessage: string;
    fsFormErrorsOrder: any[];
    protected fsFormCommon: FsFormCommon;
    protected elRef: ElementRef;
    protected renderer: Renderer2;
    protected controlRef: NgControl;
    protected viewContainer: ViewContainerRef;
    protected statusChanges$: any;
    constructor(ElementRef: ElementRef, Renderer2: Renderer2, NgControl: NgControl, ViewContainerRef: ViewContainerRef, FsFormCommon: FsFormCommon);
    ngOnDestroy(): void;
    ngAfterViewChecked(): void;
    updateValidators(): void;
    addValidator(validator: any): void;
    removeValidator(validator: any): void;
    addAsyncValidator(validator: any): void;
}
